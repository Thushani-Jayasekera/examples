2024-06-21 12:13:34
Full thread dump OpenJDK 64-Bit Server VM (11.0.16.1+1 mixed mode):

Threads class SMR info:
_java_thread_list=0x0000000123960760, length=30, elements={
0x0000000124009800, 0x0000000124062000, 0x0000000124065000, 0x0000000124058800,
0x000000012407d000, 0x0000000111860800, 0x0000000111861800, 0x000000010a0af000,
0x000000010a100000, 0x0000000124351800, 0x0000000112dcc800, 0x0000000112acb000,
0x0000000112816000, 0x0000000112c1a000, 0x0000000112ad8800, 0x0000000111939000,
0x000000010a1a9800, 0x0000000112ad9000, 0x000000010a0b0800, 0x0000000112c2a000,
0x0000000112c2a800, 0x0000000112e8b800, 0x0000000124334000, 0x0000000111979800,
0x00000001243f4000, 0x000000011197a000, 0x000000011191a000, 0x0000000112e8c800,
0x000000012407a800, 0x000000012700a800
}

"main" #1 prio=5 os_prio=31 cpu=406.14ms elapsed=154.67s tid=0x0000000124009800 nid=0x2303 waiting on condition  [0x000000016bafe000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler.start(Scheduler.java:278)
	at renuka.ballerina_service.0.$_init.main(ballerina_service)

   Locked ownable synchronizers:
	- None

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.39ms elapsed=154.66s tid=0x0000000124062000 nid=0x5203 waiting on condition  [0x000000016c952000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.16.1/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.16.1/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.16.1/Reference.java:213)

   Locked ownable synchronizers:
	- None

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=154.66s tid=0x0000000124065000 nid=0x5003 in Object.wait()  [0x000000016cb5e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.16.1/Native Method)
	- waiting on <0x00000006cdd0eba0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.16.1/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000006cdd0eba0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.16.1/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.16.1/Finalizer.java:170)

   Locked ownable synchronizers:
	- None

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.11ms elapsed=154.65s tid=0x0000000124058800 nid=0x7f03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.02ms elapsed=154.65s tid=0x000000012407d000 nid=0x5703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=241.63ms elapsed=154.65s tid=0x0000000111860800 nid=0x5803 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

   Locked ownable synchronizers:
	- None

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=191.43ms elapsed=154.65s tid=0x0000000111861800 nid=0x5a03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

   Locked ownable synchronizers:
	- None

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.01ms elapsed=154.65s tid=0x000000010a0af000 nid=0x7a03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.65ms elapsed=154.63s tid=0x000000010a100000 nid=0x7703 in Object.wait()  [0x000000016db56000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.16.1/Native Method)
	- waiting on <0x00000006cdd0f4c8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.16.1/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000006cdd0f4c8> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.16.1/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.16.1/InnocuousThread.java:161)

   Locked ownable synchronizers:
	- None

"nioEventLoopGroup-2-1" #53 prio=10 os_prio=31 cpu=2.12ms elapsed=154.00s tid=0x0000000124351800 nid=0xb403 runnable  [0x0000000179ca2000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.KQueue.poll(java.base@11.0.16.1/Native Method)
	at sun.nio.ch.KQueueSelectorImpl.doSelect(java.base@11.0.16.1/KQueueSelectorImpl.java:122)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(java.base@11.0.16.1/SelectorImpl.java:124)
	- locked <0x00000006cf0f7fc0> (a io.netty.channel.nio.SelectedSelectionKeySet)
	- locked <0x00000006cf0f3180> (a sun.nio.ch.KQueueSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(java.base@11.0.16.1/SelectorImpl.java:141)
	at io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
	at io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-0" #54 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112dcc800 nid=0x9b0b waiting on condition  [0x000000016ebb6000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-1" #55 prio=5 os_prio=31 cpu=0.04ms elapsed=154.00s tid=0x0000000112acb000 nid=0x6c0b waiting on condition  [0x000000016edc2000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-2" #56 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112816000 nid=0x6e0b waiting on condition  [0x000000016efce000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-3" #57 prio=5 os_prio=31 cpu=0.02ms elapsed=154.00s tid=0x0000000112c1a000 nid=0x840b waiting on condition  [0x000000016f1da000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-4" #58 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112ad8800 nid=0x850b waiting on condition  [0x000000016f3e6000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-5" #59 prio=5 os_prio=31 cpu=0.06ms elapsed=154.00s tid=0x0000000111939000 nid=0x950b waiting on condition  [0x000000016f5f2000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-6" #60 prio=5 os_prio=31 cpu=0.05ms elapsed=154.00s tid=0x000000010a1a9800 nid=0xa40b waiting on condition  [0x000000016f7fe000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-7" #61 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112ad9000 nid=0x8f0b waiting on condition  [0x000000016fa0a000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-8" #62 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x000000010a0b0800 nid=0x900b waiting on condition  [0x000000016fc16000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-9" #63 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112c2a000 nid=0x8e0b waiting on condition  [0x000000016fe22000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-10" #64 prio=5 os_prio=31 cpu=0.02ms elapsed=154.00s tid=0x0000000112c2a800 nid=0xac0b waiting on condition  [0x0000000178206000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-11" #65 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x0000000112e8b800 nid=0x9c0b waiting on condition  [0x0000000178412000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-12" #66 prio=5 os_prio=31 cpu=0.02ms elapsed=154.00s tid=0x0000000124334000 nid=0x8b0b waiting on condition  [0x000000017861e000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-13" #67 prio=5 os_prio=31 cpu=0.02ms elapsed=154.00s tid=0x0000000111979800 nid=0xa10b waiting on condition  [0x000000017882a000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-14" #68 prio=5 os_prio=31 cpu=0.03ms elapsed=154.00s tid=0x00000001243f4000 nid=0xfd0b waiting on condition  [0x0000000178a36000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-15" #69 prio=5 os_prio=31 cpu=0.02ms elapsed=153.99s tid=0x000000011197a000 nid=0x920b waiting on condition  [0x0000000178c42000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-16" #70 prio=5 os_prio=31 cpu=0.03ms elapsed=153.99s tid=0x000000011191a000 nid=0x870b waiting on condition  [0x0000000178e4e000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-17" #71 prio=5 os_prio=31 cpu=0.03ms elapsed=153.99s tid=0x0000000112e8c800 nid=0x860b waiting on condition  [0x000000017905a000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"jbal-strand-exec-18" #72 prio=5 os_prio=31 cpu=0.02ms elapsed=153.99s tid=0x000000012407a800 nid=0xa60b waiting on condition  [0x0000000179266000]
   java.lang.Thread.State: WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.16.1/Native Method)
	- parking to wait for  <0x00000006cdd3a220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(java.base@11.0.16.1/LockSupport.java:194)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@11.0.16.1/AbstractQueuedSynchronizer.java:2081)
	at java.util.concurrent.LinkedBlockingDeque.takeFirst(java.base@11.0.16.1/LinkedBlockingDeque.java:483)
	at java.util.concurrent.LinkedBlockingDeque.take(java.base@11.0.16.1/LinkedBlockingDeque.java:671)
	at io.ballerina.runtime.internal.scheduling.Scheduler.run(Scheduler.java:305)
	at io.ballerina.runtime.internal.scheduling.Scheduler.runSafely(Scheduler.java:291)
	at io.ballerina.runtime.internal.scheduling.Scheduler$$Lambda$27/0x0000000800328440.run(Unknown Source)
	at java.lang.Thread.run(java.base@11.0.16.1/Thread.java:829)

   Locked ownable synchronizers:
	- None

"Attach Listener" #73 daemon prio=9 os_prio=31 cpu=1.55ms elapsed=111.93s tid=0x000000012700a800 nid=0x6207 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

"VM Thread" os_prio=31 cpu=33.01ms elapsed=154.66s tid=0x000000012405a800 nid=0x5403 runnable  

"GC Thread#0" os_prio=31 cpu=8.20ms elapsed=154.67s tid=0x0000000124010800 nid=0x2c03 runnable  

"GC Thread#1" os_prio=31 cpu=9.45ms elapsed=154.41s tid=0x00000001129ce000 nid=0x7503 runnable  

"GC Thread#2" os_prio=31 cpu=8.88ms elapsed=154.41s tid=0x00000001128f4000 nid=0x6603 runnable  

"GC Thread#3" os_prio=31 cpu=7.51ms elapsed=154.41s tid=0x000000010a116800 nid=0x7303 runnable  

"GC Thread#4" os_prio=31 cpu=7.61ms elapsed=154.41s tid=0x000000010a1ac000 nid=0x7103 runnable  

"GC Thread#5" os_prio=31 cpu=8.48ms elapsed=154.41s tid=0x000000010a1ad000 nid=0x7003 runnable  

"GC Thread#6" os_prio=31 cpu=5.62ms elapsed=154.22s tid=0x000000012433b000 nid=0xaf03 runnable  

"GC Thread#7" os_prio=31 cpu=5.39ms elapsed=154.22s tid=0x000000011780d000 nid=0xb103 runnable  

"GC Thread#8" os_prio=31 cpu=6.61ms elapsed=154.22s tid=0x000000011780e000 nid=0xfc03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.19ms elapsed=154.67s tid=0x0000000124050800 nid=0x3903 runnable  

"G1 Conc#0" os_prio=31 cpu=1.86ms elapsed=154.67s tid=0x000000010a008800 nid=0x3003 runnable  

"G1 Conc#1" os_prio=31 cpu=2.27ms elapsed=154.21s tid=0x0000000124367000 nid=0xfb03 runnable  

"G1 Refine#0" os_prio=31 cpu=0.08ms elapsed=154.67s tid=0x000000010a0ad800 nid=0x3203 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=38.71ms elapsed=154.67s tid=0x000000010a0ae000 nid=0x3703 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=94.78ms elapsed=154.63s tid=0x0000000111812800 nid=0x5e03 waiting on condition  

JNI global refs: 17, weak refs: 0

