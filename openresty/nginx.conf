worker_processes 1;
error_log stderr notice;

events {
    worker_connections 1024;
}

http {
    log_format my_custom_format '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '"$host"';

    # access_log /dev/stdout combined;
    access_log /dev/stdout my_custom_format;
    # error_log /dev/stderr notice;

    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost;

        proxy_read_timeout 3s;
        proxy_send_timeout 3s;
        proxy_connect_timeout 3s;

        more_clear_headers Server;
        # proxy_hide_header Server;

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
        }

        location /bar {
            set $specialHost 'false';
            set $target 'http://upstream-service:8080';

            access_by_lua_block {
                local host = ngx.var.host;
                local reg = "^(?<subDomain>[^.]+).*";
                local m = ngx.re.match(host, reg);
                if m then
                    local sub_domain = m["subDomain"];
                    if sub_domain == 'foo' then
                        ngx.var.target = 'http://upstream-service:8080/new/target?delayMs=5000';
                        ngx.exec("@specialHost")
                    end
                end
            }

            proxy_pass http://upstream-service:8080;
        }

        location @specialHost {
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
            proxy_connect_timeout 30s;
            proxy_pass $target;
        }

        location / {
            access_by_lua_file /usr/local/openresty/nginx/lua/script.lua;
            proxy_pass http://upstream-service:8080/;
        }

        location /foo {
            add_header Server "My Server";
            rewrite ^/(.*) https://www.google.com permanent;
        }
    }
}
