admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9000

# layered_runtime:
#   layers:
#     - name: deprecation
#       static_layer:
#         envoy.reloadable_features.lua_respond_with_send_local_reply: false

static_resources:
  listeners:
    - name: main
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9090
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/multiple/lua/scripts"
                          route:
                            cluster: web_service
                          response_headers_to_add:
                            - header:
                                key: response_headers_to_add
                                value: RENUKA
                          typed_per_filter_config:
                            lua_filter_with_custom_name_1:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                              source_code:
                                inline_string: |
                                  function envoy_on_request(request_handle)
                                    request_handle:respond(
                                      {
                                        [":status"] = "403",
                                        ["upstream_foo"] = "foo",
                                        ["Content-Type"] = "application/json"
                                      },
                                      ""
                                    )
                                  end
                                  
                                  function envoy_on_response(response_handle)
                                    response_handle:headers():add("header_key_1", "header_value_1")
                                  end
                        - match:
                            prefix: "/"
                          route:
                            cluster: web_service
                http_filters:
                  - name: lua_filter_with_custom_name_0
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      default_source_code:
                        inline_string:
                          local mylibrary = require("lib.mylibrary")

                          function envoy_on_request(request_handle)
                            request_handle:headers():add("foo", mylibrary.foobar())
                          end
                  - name: lua_filter_with_custom_name_1
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: web_service
      type: STRICT_DNS # static
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: web_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: web_service
                      port_value: 8080
