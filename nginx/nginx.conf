user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
error_log  /dev/stderr notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $host';

    # access_log  /var/log/nginx/access.log  main;
    access_log  /dev/stdout  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    large_client_header_buffers 4 8k;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Map for connection upgrade
    map $http_upgrade $connection_upgrade {
        default          upgrade;
        ''               '';
    }

    server {
        listen 8080;
        location / {
        


            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # proxy_pass http://host.docker.internal:9090;
            proxy_pass http://upstream-service:8080;
        }

        location ~ \.(gif|jpg|png)$ {
            root /data/images;
        }
    }

    server {
        listen 8443 ssl;

        ssl_certificate /certs/listener.pem;
        ssl_certificate_key /certs/listener.key;
        ssl_client_certificate /certs/client.pem;
        ssl_verify_client on;

        proxy_set_header X-CLIENT-CERTIFICATE $ssl_client_escaped_cert;

        location / {
            proxy_set_header X-CLIENT-CERTIFICATE $ssl_client_escaped_cert;
            rewrite ^/foo/bar /bar;
            proxy_pass http://upstream-service:8080/;
        }

        location ~ \.(gif|jpg|png)$ {
            root /data/images;
        }
    }
}
